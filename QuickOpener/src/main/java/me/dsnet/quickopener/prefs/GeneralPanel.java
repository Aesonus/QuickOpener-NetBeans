/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package me.dsnet.quickopener.prefs;

import java.awt.BorderLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import javax.swing.JCheckBox;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import me.dsnet.quickopener.QuickMessages;
import me.dsnet.quickopener.prefs.shell.chooser.IShellConfigurator;
import me.dsnet.quickopener.prefs.shell.chooser.impl.GitBashConfigurator;
import org.openide.DialogDescriptor;
import org.openide.DialogDisplayer;
import org.openide.NotifyDescriptor;
import org.openide.util.NbBundle;

/**
 *
 * @author SessonaD
 * @author markiewb
 */
public class GeneralPanel extends javax.swing.JPanel {

    private QuickOpenerOptionsPanelController controller;

    /**
     * Creates new form GeneralPanel
     */
    public GeneralPanel() {
        initComponents();
        loadConfig();
        final DocumentListener documentListener = new DocumentListener() {
            @Override
            public void changedUpdate(DocumentEvent e) {
                controller.changed();
            }

            @Override
            public void insertUpdate(DocumentEvent e) {
                controller.changed();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                controller.changed();
            }
        };
        txtCustomShell.getDocument().addDocumentListener(documentListener);
        txtPathSeparator.getDocument().addDocumentListener(documentListener);
        cbConfirmation.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                controller.changed();
            }
        });
    }

    public JCheckBox getCbConfirmation() {
        return cbConfirmation;
    }

    public JTextField getTxtCustomShell() {
        return txtCustomShell;
    }

    public JTextField getTxtPathSeparator() {
        return txtPathSeparator;
    }

    void setController(QuickOpenerOptionsPanelController controller) {
        this.controller = controller;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txtPathSeparator = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtCustomShell = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        cbConfirmation = new javax.swing.JCheckBox();
        shellConfigureButton = new javax.swing.JButton();
        resetButton = new javax.swing.JButton();

        org.openide.awt.Mnemonics.setLocalizedText(jLabel3, org.openide.util.NbBundle.getMessage(GeneralPanel.class, "GeneralPanel.jLabel3.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel4, org.openide.util.NbBundle.getMessage(GeneralPanel.class, "GeneralPanel.jLabel4.text")); // NOI18N

        jLabel1.setLabelFor(txtPathSeparator);
        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(GeneralPanel.class, "GeneralPanel.jLabel1.text")); // NOI18N

        txtPathSeparator.setText(org.openide.util.NbBundle.getMessage(GeneralPanel.class, "GeneralPanel.txtPathSeparator.text")); // NOI18N

        jLabel6.setLabelFor(txtCustomShell);
        org.openide.awt.Mnemonics.setLocalizedText(jLabel6, org.openide.util.NbBundle.getMessage(GeneralPanel.class, "GeneralPanel.jLabel6.text")); // NOI18N

        txtCustomShell.setText(org.openide.util.NbBundle.getMessage(GeneralPanel.class, "GeneralPanel.txtCustomShell.text")); // NOI18N

        jLabel7.setLabelFor(cbConfirmation);
        org.openide.awt.Mnemonics.setLocalizedText(jLabel7, org.openide.util.NbBundle.getMessage(GeneralPanel.class, "GeneralPanel.jLabel7.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(cbConfirmation, org.openide.util.NbBundle.getMessage(GeneralPanel.class, "GeneralPanel.cbConfirmation.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(shellConfigureButton, org.openide.util.NbBundle.getMessage(GeneralPanel.class, "GeneralPanel.shellConfigureButton.text")); // NOI18N
        shellConfigureButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                shellConfigureButtonActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(resetButton, org.openide.util.NbBundle.getMessage(GeneralPanel.class, "GeneralPanel.resetButton.text")); // NOI18N
        resetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel6)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbConfirmation, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtPathSeparator, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 159, Short.MAX_VALUE)
                                    .addComponent(txtCustomShell, javax.swing.GroupLayout.Alignment.LEADING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(shellConfigureButton, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(resetButton))))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {resetButton, shellConfigureButton});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtPathSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(shellConfigureButton)
                    .addComponent(txtCustomShell, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(cbConfirmation)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(resetButton))
        );
    }// </editor-fold>//GEN-END:initComponents

    void loadConfig() {
        QuickOpenerProperty customSeparator = PrefsUtil.load(null, "generalseparator", "");
        txtPathSeparator.setText(customSeparator.getValue());
        QuickOpenerProperty customShell = PrefsUtil.load(null, "customShell", "");
        txtCustomShell.setText(customShell.getValue());
        QuickOpenerProperty confirmation = PrefsUtil.load(null, "confirmationDialogue", "true");
        boolean isConfirmSelected = Boolean.parseBoolean(confirmation.getValue());
        cbConfirmation.setSelected(isConfirmSelected);
        shellConfigureButton.setEnabled(!getAvailableConfigurators().isEmpty());
    }

    private void resetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetButtonActionPerformed
        PrefsUtil.removeSingleProperty("customShell");
        PrefsUtil.removeSingleProperty("generalseparator");
        PrefsUtil.removeSingleProperty("confirmationDialogue");

        loadConfig();
    }//GEN-LAST:event_resetButtonActionPerformed

    @NbBundle.Messages(
            {"LBL_Form_Label=Choose a configurator:",
                "LBL_Dialog=Configurator",}
    )
    private void shellConfigureButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_shellConfigureButtonActionPerformed
        JTextField shellTextField = txtCustomShell;

        List<String> labels = new ArrayList<String>();
        for (IShellConfigurator configurator : getAvailableConfigurators()) {
            if (configurator.isAvailable()) {
                labels.add(configurator.getLabel());
            }
        }

        final JList jList = new JList(labels.toArray(new String[labels.size()]));
        JPanel form = new JPanel(new BorderLayout());
        form.add(jList, BorderLayout.CENTER);
        form.add(new JLabel(Bundle.LBL_Form_Label()), BorderLayout.NORTH);
        jList.setSelectedIndex(0);
        DialogDescriptor dd = new DialogDescriptor(form, Bundle.LBL_Dialog());
        Object result = DialogDisplayer.getDefault().notify(dd);
        if (result == NotifyDescriptor.OK_OPTION) {
            IShellConfigurator configurator = getAvailableConfigurators().get(jList.getSelectedIndex());

            String configure = configurator.configure();
            if (null != configure) {
                shellTextField.setText(configure);
            }
        }
    }//GEN-LAST:event_shellConfigureButtonActionPerformed

    private List<IShellConfigurator> getAvailableConfigurators() {
        //TODO externalize the configuration of available configurators
        List<IShellConfigurator> allconfigurators = Arrays.asList((IShellConfigurator) new GitBashConfigurator());
        List<IShellConfigurator> availableConfigurators = new ArrayList<IShellConfigurator>();
        for (IShellConfigurator configurator : allconfigurators) {
            if (configurator.isAvailable()) {
                availableConfigurators.add(configurator);
            }
        }
        return availableConfigurators;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox cbConfirmation;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JButton resetButton;
    private javax.swing.JButton shellConfigureButton;
    private javax.swing.JTextField txtCustomShell;
    private javax.swing.JTextField txtPathSeparator;
    // End of variables declaration//GEN-END:variables
}
